// Generated by CoffeeScript 1.7.1
(function() {
  var Cluster, Model,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Model = require('model.coffee');

  Cluster = (function(_super) {
    __extends(Cluster, _super);

    function Cluster(people) {
      this.people = people != null ? people : [];
      this.price = __bind(this.price, this);
      this.population = __bind(this.population, this);
      Cluster.__super__.constructor.apply(this, arguments);
    }

    Cluster.prototype.addPeople = function(people) {
      if (people == null) {
        people = [];
      }
      return this.people = this.people.concat(people);
    };

    Cluster.prototype.population = function() {
      return this.people.reduce((function(_this) {
        return function(pv, cv) {
          return pv + cv;
        };
      })(this), 0);
    };

    Cluster.prototype.price = function() {
      return Math.ceil(this.population() * 1314 / 500) * 500;
    };

    return Cluster;

  })(Model);

  module.exports = Cluster;

}).call(this);
