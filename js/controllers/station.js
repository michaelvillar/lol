// Generated by CoffeeScript 1.4.0
(function() {
  var Model, Station,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Model = require('model.coffee');

  Station = (function(_super) {

    __extends(Station, _super);

    function Station(index) {
      this.pendingPeople = __bind(this.pendingPeople, this);

      this.addPeople = __bind(this.addPeople, this);
      Station.__super__.constructor.apply(this, arguments);
      this.index = index;
      this.people = [];
    }

    Station.prototype.addPeople = function(people) {
      this.people = this.people.concat(people);
      return this.trigger('station.people.changed');
    };

    Station.prototype.pendingPeople = function() {
      var _this = this;
      return this.people.reduce(function(pv, cv) {
        return pv + cv;
      }, 0);
    };

    return Station;

  })(Model);

  module.exports = Station;

}).call(this);
